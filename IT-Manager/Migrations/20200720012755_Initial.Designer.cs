// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using itmanager.Models;

namespace itmanager.Migrations
{
    [DbContext(typeof(TicketContext))]
    [Migration("20200720012755_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("itmanager.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 5001,
                            Authority = "Employee",
                            FirstName = "Paul",
                            LastName = "Ford",
                            Password = "Password",
                            StoreId = 1
                        },
                        new
                        {
                            EmployeeId = 81112,
                            Authority = "Admin",
                            FirstName = "Trevor",
                            LastName = "Miller",
                            Password = "Password",
                            StoreId = 2
                        },
                        new
                        {
                            EmployeeId = 82345,
                            Authority = "Employee",
                            FirstName = "Shane",
                            LastName = "Blume",
                            Password = "Password",
                            StoreId = 3
                        },
                        new
                        {
                            EmployeeId = 88812,
                            Authority = "Admin",
                            FirstName = "Trae",
                            LastName = "Eddie",
                            Password = "Password",
                            StoreId = 4
                        },
                        new
                        {
                            EmployeeId = 86421,
                            Authority = "Admin",
                            FirstName = "Hillary",
                            LastName = "Murphy",
                            Password = "Password",
                            StoreId = 5
                        });
                });

            modelBuilder.Entity("itmanager.Models.Severity", b =>
                {
                    b.Property<string>("SeverityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeverityId");

                    b.ToTable("Severities");

                    b.HasData(
                        new
                        {
                            SeverityId = "1",
                            Name = "Low"
                        },
                        new
                        {
                            SeverityId = "2",
                            Name = "Medium"
                        },
                        new
                        {
                            SeverityId = "3",
                            Name = "High"
                        },
                        new
                        {
                            SeverityId = "4",
                            Name = "Emergency"
                        });
                });

            modelBuilder.Entity("itmanager.Models.Status", b =>
                {
                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = "1",
                            Name = "In Queue"
                        },
                        new
                        {
                            StatusId = "2",
                            Name = "In Progress"
                        },
                        new
                        {
                            StatusId = "3",
                            Name = "Complete"
                        });
                });

            modelBuilder.Entity("itmanager.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            City = "Bettendorf",
                            State = "IA",
                            StoreAlias = "1375",
                            StreetAddress = "2900 Devils Glen Road",
                            Zip = "52722"
                        },
                        new
                        {
                            StoreId = 2,
                            City = "Belton",
                            State = "MO",
                            StoreAlias = "5035",
                            StreetAddress = "1307 East North Avenue",
                            Zip = "64012"
                        },
                        new
                        {
                            StoreId = 3,
                            City = "Austin",
                            State = "MN",
                            StoreAlias = "1889",
                            StreetAddress = "1307 18th Ave NW",
                            Zip = "55912"
                        },
                        new
                        {
                            StoreId = 4,
                            City = "Rock Island",
                            State = "IL",
                            StoreAlias = "4205",
                            StreetAddress = "2930 18th Avenue",
                            Zip = "61201"
                        },
                        new
                        {
                            StoreId = 5,
                            City = "West Des Moines",
                            State = "IA",
                            StoreAlias = "1601",
                            StreetAddress = "1700 Valley West Drive",
                            Zip = "50266"
                        });
                });

            modelBuilder.Entity("itmanager.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetailedDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeverityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            DetailedDescription = "First upload of a ticket to make sure we can connect to a database",
                            EmployeeId = 5001,
                            SeverityId = "1",
                            ShortDescription = "First Ticket",
                            StatusId = "1",
                            StoreId = 1
                        },
                        new
                        {
                            TicketId = 2,
                            DetailedDescription = "My register is broken..... mehhhhhhhhhhhhhhh",
                            EmployeeId = 81112,
                            SeverityId = "2",
                            ShortDescription = "Second Ticket",
                            StatusId = "1",
                            StoreId = 2
                        },
                        new
                        {
                            TicketId = 3,
                            DetailedDescription = "This register is causing us issues.",
                            EmployeeId = 82345,
                            SeverityId = "3",
                            ShortDescription = "Third Ticket",
                            StatusId = "1",
                            StoreId = 3
                        },
                        new
                        {
                            TicketId = 4,
                            DetailedDescription = "Nothing like pharmacy screwing up....... blah",
                            EmployeeId = 88812,
                            SeverityId = "1",
                            ShortDescription = "Fouth Ticket",
                            StatusId = "1",
                            StoreId = 4
                        },
                        new
                        {
                            TicketId = 5,
                            DetailedDescription = "The whole store is down",
                            EmployeeId = 86421,
                            SeverityId = "4",
                            ShortDescription = "Fifth Ticket",
                            StatusId = "1",
                            StoreId = 5
                        });
                });

            modelBuilder.Entity("itmanager.Models.Employee", b =>
                {
                    b.HasOne("itmanager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("itmanager.Models.Ticket", b =>
                {
                    b.HasOne("itmanager.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("itmanager.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
